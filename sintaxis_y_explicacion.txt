---------------------------------------------------------------
//BUSCAR OBJETOS EN LA ESCENA
Buscar actores cuando el juego se ejecuta es algo fundamental, pero bastante lento asi que usar con precaucion,
para buscar objetos en la escena hay que importar una libreria

#include "Kismet/GameplayStatics.h"


Luego buscamos por clase o por clase con tag.
importante poner "UGameplayStatics::"

////para buscar de actores que estan en la escena con tag
TArray<AActor* > TodosLosAcotres;//declaro variable
UGameplayStatics::GetAllActorsOfClassWithTag(GetWorld(), AActor::StaticClass(), TEXT("objeto"), TodosLosAcotres);//uso variable como parametro

////para buscar un solo actor por clase
TSubclassOf<class ADatosGlobales> enEscena;//declaro variable
UGameplayStatics::GetActorOfClass(GetWorld(), enEscena);//uso variable como parametro
-------------------------------------------------------------

-------------------------------------------------------------
INPUTS
Tiene que heredar de Pawn, y sino es el player prinncipal hay que activarlo.
Los inputs tendrian que poder activarse desde cualquier lado

tenemos que usar el include
#include "Components/InputComponent.h"
#include "Input.h"

//en begin play
EnableInput(GetWorld()->GetFirstPlayerController());
//the enable input used here means i dont have to enable auto receive input in the editor window
UInputComponent* myInputComp = this->InputComponent;  //InputComponent variable is from AActor.h
//check that it is valid before calling
//i.e. not null.  
if (myInputComp)
{
  SetupMyPlayerInputComponent(myInputComp);
}


La función que se usa en .h
virtual void SetupPlayerInputComponent(class UInputComponent* PlayerInputComponent) override;


// la función que se usa en .Cpp
void ACar::SetupPlayerInputComponent(UInputComponent* PlayerInputComponent)
{
	Super::SetupPlayerInputComponent(PlayerInputComponent);
	
	PlayerInputComponent->BindAction("derecha", EInputEvent::IE_Pressed, this, &ACar::MoverIzquierda);
}

///////////////////////////////////////////////////////////////////////////////////////////////////

MENSAJE POR PANTALLA.
if (GEngine)
	{
		//Print debug message
		GEngine->AddOnScreenDebugMessage(-10, 1.f, FColor::Yellow, FString::printf(TEXT("Rotation: %f - %f - %f"), CameraRotation.Pitch, CameraRotation.Yaw, CameraRotation.Roll));
	}

//////////////////////////////////////////////////////////////////////////////////////////////////

Codigos de VScode

uprintstring
GEngine->AddOnScreenDebugMessage(0, 0.f, FColor::Red, FString::Printf(TEXT("TEXT")));

